Parameters:
  VPC:
      Description: The VPC that the ECS cluster is deployed to
      Type: AWS::EC2::VPC::Id
  
  Listener:
      Description: The Application Load Balancer to register with
      Type: String

  Tag:
    Type: String
    Default: latest

  Cluster:
    Type: String

  Repository:
    Type: String

Resources:
  ECSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ecs-service-role
      Path: /
      AssumeRolePolicyDocument:
          Statement:
              - Effect: Allow
                Principal:
                    Service:
                        - "ecs.amazonaws.com"
                Action: "sts:AssumeRole"
      Policies:
          - PolicyName: !Sub ecs-service-${AWS::StackName}
            PolicyDocument:
                Statement:
                    - Effect: Allow
                      Action:
                          - "ec2:AuthorizeSecurityGroupIngress"
                          - "ec2:Describe*"
                          - "elasticloadbalancing:DeregisterInstancesFromLoadBalancer"
                          - "elasticloadbalancing:Describe*"
                          - "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
                          - "elasticloadbalancing:DeregisterTargets"
                          - "elasticloadbalancing:DescribeTargetGroups"
                          - "elasticloadbalancing:DescribeTargetHealth"
                          - "elasticloadbalancing:RegisterTargets"
                      Resource: "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      Role: !Ref ECSServiceRole
      DesiredCount: 1
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: grs-consumer-service
          ContainerPort: 8000
          TargetGroupArn: !Ref TargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AWS::StackName}-grs-consumer-service
      ContainerDefinitions:
        - Name: grs-consumer-service
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}:${Tag}
          Essential: true
          Memory: 128
          PortMappings:
            - ContainerPort: 8000
          Environment:
            - Name: Tag
              Value: !Ref Tag
  
  TargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
          Name: grs-consumer-service-tgt-group
          VpcId: !Ref VPC
          Port: 8000
          Protocol: HTTP
          Matcher:
              HttpCode: 200-299
          HealthCheckIntervalSeconds: 10
          HealthCheckPath: /
          HealthCheckProtocol: HTTP
          HealthCheckTimeoutSeconds: 5
          HealthyThresholdCount: 2

  ListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
          ListenerArn: !Ref Listener
          Priority: 1
          Conditions:
              - Field: host-header
                Values:
                    - grs-consumer-service.*
          Actions:
              - TargetGroupArn: !Ref TargetGroup
                Type: forward

